##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
# vi: set sw=4 ts=4 ai:

############################################################################
############################################################################
# Reset Prefix
############################################################################
unbind C-b                  # unbind default leader key
unbind C-a
set-option -g prefix C-a    # C-a for perfix just like screen
bind-key a send-prefix      # for nested tmux sessions

############################################################################
# Unbindings
############################################################################
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
unbind ,
unbind .
unbind n
unbind p # for paste
unbind [ # copy mode bound to escape key
unbind l
unbind &
unbind "'"
unbind j    # join-pane bound to 'j' key

############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r      source-file ~/.tmux.conf \; display-message "✱ ~/.tmux.conf config reloaded..."

bind-key C-a    last-window # C-a C-a for last active window
bind-key x      kill-pane
bind-key X      kill-window
bind-key q      confirm-before kill-session
bind-key Q      confirm-before kill-server
bind-key ,      previous-window # <
bind-key .      next-window     # >
bind-key <      swap-window -t :-
bind-key >      swap-window -t :+
bind-key n      new-window
bind-key N      command-prompt 'rename-window %%'
bind-key Escape copy-mode -u # copy mode bound to escape key
bind-key R      refresh-client

############################################################################
# Global options
############################################################################
# Use whatever shell we launched from
set -g default-shell $SHELL

# large history
set-option -g history-limit 4096

# utf8 support
set-window-option -g utf8 on

## starts windows numbering at 1 not 0
set-option -g base-index 1
#setw -g pane-base-index 1

# allows for faster key repetition
set -s escape-time 0

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on

# use mouse 
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on
set-window-option -g mouse-resize-pane on
set-option -g status-keys vi
set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@'

# vi copypaste mode
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection



# Don't change tmux's own window titles
setw -g automatic-rename off

### set window notifications
#set-option -g visual-activity on
#set-option -g visual-content on

#
# linux clipboard support
set-option -g set-clipboard on
bind C-p run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
#bind C-p run "tmux set-buffer \"$(parcellite -p)\"; tmux paste-buffer"
bind C-y run "tmux save-buffer - | xclip -i -selection clipboard"
#bind C-y run "tmux show-buffer | xclip -i -selection clipboard"
#bind C-y run "tmux show-buffer | parcellite -c"

############################################################################
# Status Bar
############################################################################
set-option -g status on
set-option -g status-utf8 on

set-option -g status-interval 2

set-option -g status-justify centre
set-option -g status-right-length 60
set-option -g status-left-length 60

set-option -g status-left ' #[bold]❐ #S:#I#[default] ⡇ #[bold]#(whoami) ● #H#[default] ⣿' 
set-option -g status-right '#[fg=red,bold] ⣿ #[fg=magenta]⌚ %m-%d %R#[default]'

### tmux window titles for X
#set-option -g set-titles on
#set-option -g set-titles-string '#H:#S.#I.#P #W #T'
set-option -g set-titles-string '[#H] #W.#T'
#set-window-option -g automatic-rename on
#set-window-option -g window-status-format ' #I #W '


############################################################################
# Windows
############################################################################
bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind-key A new-window

# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# Panes
############################################################################
# Navigation
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing 
bind-key C-h resize-pane -L 5
bind-key C-j resize-pane -D 5
bind-key C-k resize-pane -U 5
bind-key C-l resize-pane -R 5


#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

# Split current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key | split-window -h # split pane vertically
bind-key \ split-window -h # split pane vertically

# break-pane
bind-key Enter break-pane

# Join / Send
# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

############################################################################
# Layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

############################################################################
# Colours
############################################################################
# set compatible with 256 colors
set-option -g default-terminal "screen-256color"

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour11 #yellow
set-option -g status-attr default


# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
#set-window-option -g window-status-attr bold

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default 
set-window-option -g window-status-current-attr bold

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg yellow #brightgreen

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166  #orange

# clock
set-window-option -g clock-mode-colour colour64 #green
