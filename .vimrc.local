set encoding=utf-8

let mapleader = ','

syntax on
"colorscheme darkblue

set shiftwidth=3  " operation >> indents 3 columns; << unindents 3 columns
set tabstop=3     " an hard TAB displays as 3 columns
set expandtab     " insert spaces when hitting TABs
set softtabstop=3 " insert/delete 3 spaces when hitting a TAB/BACKSPACE
set shiftround    " round indent to multiple of 'shiftwidth'
set autoindent    " align the new line indent with the previous line

" window
nmap <leader>sw<left>  :topleft  vnew<CR>
nmap <leader>sw<right> :botright vnew<CR>
nmap <leader>sw<up>    :topleft  new<CR>
nmap <leader>sw<down>  :botright new<CR>
" buffer
nmap <leader>s<left>   :leftabove  vnew<CR>
nmap <leader>s<right>  :rightbelow vnew<CR>
nmap <leader>s<up>     :leftabove  new<CR>
nmap <leader>s<down>   :rightbelow new<CR>

set hlsearch                        " Highlight search results
nnoremap <F3> :set hlsearch!<CR>    " Toggle search highlighting

" buildr stuff
au Bufread,BufNewFile buildfile set filetype=ruby

" air-line
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

let g:airline_inactive_collapse=1
let g:airline#extensions#default#section_truncate_width = {
         \ 'b': 0,
         \ 'x': 0,
         \ 'y': 0,
         \ 'z': 0,
         \ 'warning': 80,
         \ 'error': 80,
         \ }
let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
let g:airline#extensions#fugitiveline#enabled = 1
let g:airline_section_c = '%t'
let g:airline#extensions#branch#format = 1
